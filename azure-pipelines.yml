trigger:
- none
pool: MQ

parameters:
- name: ScanningRequired
  displayName: Scanning required
  type: string
  default: 'true'
  values:
  - 'true'
  - 'false'



stages:
- stage:
  displayName: InitValidate
  jobs:
  - job: TerraformInit
    displayName: Job1
    
    pool: MQ
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'


    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'Workload fed MI'
        backendAzureRmStorageAccountName: 'mqstorage3'
        backendAzureRmContainerName: 'mq123'
        backendAzureRmKey: 'key.tfstate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Parent'
        
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Parent'

-  stage:
   displayName: Plan
   jobs:
   - job: TerraformInitPlanStage2
     displayName: Job2
     pool: MQ
     steps:
      
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Parent'
          backendServiceArm: 'Workload fed MI'
          backendAzureRmStorageAccountName: 'mqstorage3'
          backendAzureRmContainerName: 'mq123'
          backendAzureRmKey: 'key.tfstate'   

      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Parent'
          environmentServiceNameAzureRM: 'Workload fed MI'

-  stage:
   displayName: tfsecScanning
   condition: eq('${{ parameters.ScanningRequired }}', 'true')
   jobs:
   - job: Scanning
     displayName: Scannig
     pool: MQ
     steps:
     - task: tfsec@1
       inputs:
         version: 'v1.26.0'
         dir: '$(System.DefaultWorkingDirectory)/Parent'

-  stage:
   displayName: ManualValidation
   jobs:
   - job: ManualValidation
     displayName: ManualValidation
     pool: server
     steps:
     - task: ManualValidation@1
       inputs:
         notifyUsers: 'mansoor.qureshi05@gmail.com'
         instructions: 'Please approve'
-  stage:
   displayName: Apply
   jobs:
   - job: Apply
     displayName: Apply
     pool: MQ
     steps:
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'Workload fed MI'
          backendAzureRmStorageAccountName: 'mqstorage3'
          backendAzureRmContainerName: 'mq123'
          backendAzureRmKey: 'key.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Parent'
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Parent'
          environmentServiceNameAzureRM: 'Workload fed MI'